{
  "title": "Assignment Operators and Operator Precedence",
  "questions": [
    {
      "statement": "Which of these have highest precedence?",
      "options": [
        "()",
        "++",
        "*",
        ">>"
      ],
      "type": "SMCQ",
      "correctAns": [
        "()"
      ],
      "explain": "Order of precedence is (highest to lowest) a -> b -> c -> d.",
      "difficulty": 4
    },
    {
      "statement": "What should be expression1 evaluate to in using ternary operator as in this line?",
      "options": [
        "Integer",
        "Floating â€“ point numbers",
        "Boolean",
        "None of the mentioned"
      ],
      "type": "SMCQ",
      "correctAns": [
        "Boolean"
      ],
      "explain": "The controlling condition of ternary operator must evaluate to boolean.",
      "imgURL": "img/test/Java/2-4-2.png",
      "difficulty": 2
    },
    {
      "statement": "What is the value stored in x in following lines of code?",
      "options": [
        "0",
        "1",
        "9",
        "8"
      ],
      "type": "SMCQ",
      "correctAns": [
        "8"
      ],
      "explain": "None.",
      "imgURL": "img/test/Java/2-4-3.png",
      "difficulty": 2
    },
    {
      "statement": "What is the order of precedence (highest to lowest) of following operators?",
      "options": [
        "1 -> 2 -> 3",
        "2 -> 1 -> 3",
        "3 -> 2 -> 1",
        "2 -> 3 -> 1"
      ],
      "type": "SMCQ",
      "correctAns": [
        "1 -> 2 -> 3"
      ],
      "explain": "None.",
      "imgURL": "img/test/Java/2-4-4.png",
      "difficulty": 1
    },
    {
      "statement": "Which of these statements are incorrect?",
      "options": [
        "Equal to operator has least precedence",
        "Brackets () have highest precedence",
        "Division operator, /, has higher precedence than multiplication operator",
        "Addition operator, +, and subtraction operator have equal precedence"
      ],
      "type": "SMCQ",
      "correctAns": [
        "Division operator, /, has higher precedence than multiplication operator"
      ],
      "explain": "Division operator, /, has equal precedence as of multiplication operator. In expression involving multiplication and division evaluation of expression will begin from right side when no brackets are used.",
      "difficulty": 3
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "10",
        "11",
        "12",
        "56"
      ],
      "type": "SMCQ",
      "correctAns": [
        "12"
      ],
      "explain": "Operator ++ has the highest precedence than / , * and +. var2 is incremented to 7 and then used in expression, var3 = 7 * 5 / 7 + 7, gives 12.",
      "imgURL": "img/test/Java/2-4-6.png",
      "difficulty": 3
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "24 8",
        "24 9",
        "27 8",
        "27 9"
      ],
      "type": "SMCQ",
      "correctAns": [
        "27 9"
      ],
      "explain": "Operator ++ has higher precedence than multiplication operator, *, x is incremented to 9 than multiplied with 3 giving 27.",
      "imgURL": "img/test/Java/2-4-7.png",
      "difficulty": 2
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "compile and runs fine",
        "20",
        "run time error",
        "compile time error"
      ],
      "type": "SMCQ",
      "correctAns": [
        "compile time error"
      ],
      "explain": "None.",
      "imgURL": "img/test/Java/2-4-8.png",
      "difficulty": 2
    },
    {
      "statement": "Which of these lines of code will give better performance?",
      "options": [
        "1 will give better performance as it has no parentheses.",
        "2 will give better performance as it has parentheses.",
        "Both 1 & 2 will give equal performance.",
        "Dependent on the computer system."
      ],
      "type": "SMCQ",
      "correctAns": [
        "Both 1 & 2 will give equal performance."
      ],
      "explain": "Parentheses do not degrade the performance of the program. Adding parentheses to reduce ambiguity does not negatively affect your system.",
      "imgURL": "img/test/Java/2-4-9.png",
      "difficulty": 1
    },
    {
      "statement": " What is the output of this program?",
      "options": [
        "compile time error",
        "runtime error",
        "a=20 b=0 c=20 d=1",
        "none of the mentioned"
      ],
      "type": "SMCQ",
      "correctAns": [
        "a=20 b=0 c=20 d=1"
      ],
      "explain": "Expression will evaluate from right to left.",
      "imgURL": "img/test/Java/2-4-10.png",
      "difficulty": 2
    }
  ]
}