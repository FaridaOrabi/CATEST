{
  "title": "Relational Operators and Boolean Logic Operators",
  "questions": [
    {
      "statement": "What is the output of relational operators?",
      "options": [
        "Integer",
        "Boolean",
        "Characters",
        "Double"
      ],
      "type": "SMCQ",
      "correctAns": [
        "Boolean"
      ],
      "explain": "None.",
      "difficulty": 3
    },
    {
      "statement": "Which of these is returned by “greater than”, “less than” and “equal to” operators?",
      "options": [
        "Integers",
        "Floating – point numbers",
        "Boolean",
        "None of the mentioned"
      ],
      "type": "SMCQ",
      "correctAns": [
        "Boolean"
      ],
      "explain": "All relational operators return a boolean value ie. true and false.",
      "difficulty": 3
    },
    {
      "statement": "Which of the following operators can operate on a boolean variable?",
      "options": [
        "3 & 2",
        "1 & 4",
        "1, 2 & 4",
        "1, 2 & 3"
      ],
      "type": "SMCQ",
      "correctAns": [
        "1, 2 & 3"
      ],
      "explain": "Operator Short circuit AND, &&, equal to, == , ternary if-then-else, ?:, are boolean logical operators. += is an arithmetic operator it can operate only on numeric values.",
      "imgURL": "img/test/Java/2-3-3.png",
      "difficulty": 4
    },
    {
      "statement": "Which of these operators can skip evaluating right hand operand?",
      "options": [
        "!",
        "|",
        "&",
        "&&"
      ],
      "type": "SMCQ",
      "correctAns": [
        "&&"
      ],
      "explain": "Operator short circuit and, &&, and short circuit or, ||, skip evaluating right hand operand when output can be determined by left operand alone.",
      "difficulty": 4
    },
    {
      "statement": "Which of these statement is correct?",
      "options": [
        "true and false are numeric values 1 and 0",
        "true and false are numeric values 0 and 1",
        "true is any non zero value and false is 0",
        "true and false are non numeric values"
      ],
      "type": "SMCQ",
      "correctAns": [
        "true and false are non numeric values"
      ],
      "explain": "True and false are keywords, they are non numeric values which do no relate to zero or non zero numbers. true and false are boolean values.",
      "difficulty": 3
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "1",
        "0",
        "true",
        "false"
      ],
      "type": "SMCQ",
      "correctAns": [
        "false"
      ],
      "explain": "Operator > returns a boolean value. 5 is not greater than 6 therefore false is returned.",
      "imgURL": "img/test/Java/2-3-6.png",
      "difficulty": 2
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "false false",
        "true ture",
        "true false",
        "false true"
      ],
      "type": "SMCQ",
      "correctAns": [
        "false true"
      ],
      "explain": "Operator | returns true if any one operand is true, thus ‘c = true | false’ is true. Operator & returns a true if both of the operand is true thus d is false. Ternary operator ?: assigns left of ‘:’ if condition is true and right hand of ‘:’ if condition is false. d is false thus e = d ? b : c , assigns c to e , e contains true.",
      "imgURL": "img/test/Java/2-3-7.png",
      "difficulty": 2
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "0",
        "1",
        "3",
        "-4"
      ],
      "type": "SMCQ",
      "correctAns": [
        "3"
      ],
      "explain": "None.",
      "imgURL": "img/test/Java/2-3-8.png",
      "difficulty": 2
    },
    {
      "statement": "What is the output of this program?",
      "options": [
        "1",
        "2",
        "Runtime error owing to division by zero in if condition",
        "Unpredictable behavior of program"
      ],
      "type": "SMCQ",
      "correctAns": [
        "2"
      ],
      "explain": "Operator short circuit and, &&, skips evaluating right hand operand if left hand operand is false thus division by zero in if condition does not give an error.",
      "imgURL": "img/test/Java/2-3-9.png",
      "difficulty": 4
    },
    {
      "statement": " What is the output of this program?",
      "options": [
        "0",
        "1",
        "false",
        "true"
      ],
      "type": "SMCQ",
      "correctAns": [
        "false"
      ],
      "explain": "None.",
      "imgURL": "img/test/Java/2-3-10.png",
      "difficulty": 2
    }
  ]
}